<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Paulo Oliveira - Smart TV</title><link href="https://umdevqualquer.com.br/" rel="alternate"></link><link href="http://local.umdevqualquer.com.br:8000/feeds/smart-tv.atom.xml" rel="self"></link><id>https://umdevqualquer.com.br/</id><updated>2020-01-19T00:00:00-03:00</updated><entry><title>Minha primeira APP para Smart TVs</title><link href="https://umdevqualquer.com.br/minha-primeira-app-para-smart-tvs.html" rel="alternate"></link><published>2020-01-19T00:00:00-03:00</published><updated>2020-01-19T00:00:00-03:00</updated><author><name>Paulo Oliveira</name></author><id>tag:umdevqualquer.com.br,2020-01-19:/minha-primeira-app-para-smart-tvs.html</id><summary type="html">&lt;p&gt;Fala ae, tranquilinho?&lt;/p&gt;
&lt;p&gt;Hoje eu estou aqui para mostrar o desenvolvimento de uma app simples para Smart Tv. Como eu havia prometido &lt;a href="./como-e-o-desenvolvimento-para-smart-tvs.html"&gt;neste post&lt;/a&gt;. Recomendo a leitura, Ã© uma boa introduÃ§Ã£o.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Fala ae, tranquilinho?&lt;/p&gt;
&lt;p&gt;Hoje eu estou aqui para mostrar o desenvolvimento de uma app simples para Smart Tv. Como eu havia prometido &lt;a href="./como-e-o-desenvolvimento-para-smart-tvs.html"&gt;neste post&lt;/a&gt;. Recomendo a leitura, Ã© uma boa introduÃ§Ã£o.&lt;/p&gt;


&lt;p&gt;Tendo a ideia de tentar passar por boa partes dos problemas que temos quando desenvolvemos app para TVs, pensei em vÃ¡rios tipos diferentes de exemplo de apps: galeria de fotos, app de streaming de mÃºsica, app de streaming de animes (&lt;strike&gt;para ter uma experiÃªncia melhor que a sua, Crunchyroll&lt;/strike&gt;), ...PorÃ©m para ser algo mais rÃ¡pido e simples, eu tive que me conter ğŸ¤ª&lt;/p&gt;
&lt;h2&gt;O Projeto:&lt;/h2&gt;
&lt;p&gt;Com isso em mente, a escolha que mais se encaixou nesses requistos foi: &lt;strong&gt;app que simula um catÃ¡logo de animes/mangÃ¡&lt;/strong&gt;.
ApÃ³s essa sÃ©rie de posts, se vocÃªs quiserem, eu faÃ§o um mais "real", com request a vÃ¡rias APIs, player para tocar algo, entre outras coisas (&lt;em&gt;NÃ£o se esqueÃ§a de comentar!!&lt;/em&gt;). SerÃ¡ um app relativamente simples, porÃ©m como o post ficarÃ¡ muito logo eu irei criar uma sÃ©rie de posts. E lembrando: esse serÃ¡ um projeto web hosted focado para as Smart Tvs da Samung (Tizen) e LG (WebOs).&lt;/p&gt;
&lt;p&gt;Nesse projeto nÃ³s iremos desde a criaÃ§Ã£o de uma app na sua mÃ¡quina atÃ© vocÃª ver ela funcionando na sua TV ğŸ˜†. Com isso ensinarei como fazer uma app e quais seriam os passos para publicar a sua app.&lt;/p&gt;
&lt;h2&gt;Ferramentas:&lt;/h2&gt;
&lt;p&gt;Basicamente nÃ³s iremos utilizar essa stack para desenvolver:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;Webpack&lt;/li&gt;
&lt;li&gt;Jest&lt;/li&gt;
&lt;li&gt;HTML/CSS&lt;/li&gt;
&lt;li&gt;&lt;strike&gt;Stackoverflow&lt;/strike&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PorÃ©m, vocÃª Ã© livre para escolher a sua, podendo utilizar qualquer framework para desenvolver. &lt;em&gt;Vue.js, React, Flutter, JS Vanilla&lt;/em&gt;, sÃ£o alguns exemplos. VocÃª sÃ³ nÃ£o pode esquercer de duas premissas: &lt;strong&gt;compatibilidade&lt;/strong&gt; e &lt;strong&gt;performance&lt;/strong&gt;! EntÃ£o vamos fazer essa bagaÃ§a funcionar!!!&lt;/p&gt;
&lt;h3&gt;Configurando o projeto:&lt;/h3&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="E la vamos nÃ³s" src="https://media.tenor.com/images/0993a0560293a59c1bee27a37d91696d/tenor.png"&gt;&lt;br/&gt;&lt;sup&gt;Creditos: google&lt;/sup&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Aqui Ã© aquela configuraÃ§Ã£o padrao: aquele nosso &lt;code&gt;create-react-app&lt;/code&gt; bÃ¡sico (se vocÃª nÃ£o tem o &lt;em&gt;create-react-app&lt;/em&gt; Ã© sÃ³ usar o &lt;code&gt;npm install -g create-react-app&lt;/code&gt;). Com isso, jÃ¡ comeÃ§amos a ter a nossa estrutura inicial.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ create-react-app my-first-smart-tv-app
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Nota: &lt;em&gt;Para fins prÃ¡ticos e educacionais, eu nÃ£o irei otimizar a nossa app ao mÃ¡ximo, me atentarei para o funcionamento bÃ¡sico de uma app.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Continuando, agora estÃ¡ na hora de adicionar o babel e o webpack, segue os comandos:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Webpack&lt;/span&gt;
$ yarn add -D webpack webpack-cli webpack-dev-server html-webpack-plugin html-loadert
&lt;span class="c1"&gt;# babel&lt;/span&gt;
$ yarn add -D @babel/core babel-loader @babel/preset-env @babel/preset-react babel-preset-es2015
&lt;span class="c1"&gt;# Sass/css&lt;/span&gt;
$ yarn add -D sass-loader node-sass css-loader mini-css-extract-plugin
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Ã‰ necessÃ¡rio fazer algumas configuraÃ§Ãµes para o funcionamento do webpack/babel apÃ³s a instalaÃ§Ã£o, como eu mexi em vÃ¡rios arquivos, &lt;a href="https://github.com/paulopotter/my-first-smart-tv-app/commit/6a5b5f4"&gt;aqui estÃ¡ o commit com essas modificaÃ§Ãµes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Com isso nÃ³s jÃ¡ temos a estrutura da nossa APP.&lt;/p&gt;
&lt;h3&gt;ComeÃ§ando o desenvolvimento:&lt;/h3&gt;
&lt;p&gt;Antes que eu me esqueÃ§a, estarei postando essa &lt;a href="https://github.com/paulopotter/my-first-smart-tv-app"&gt;app no github&lt;/a&gt;, com isso se vocÃª quiser apenas o resultado final, estarÃ¡ tudo documentado lÃ¡.&lt;/p&gt;
&lt;p&gt;Agora vamos comeÃ§ar a codar de verdade, para isso vamos fazer um request para a API que vai nos entregar os dados que a gente precisa, para isso vamos utilizar o &lt;a href="https://jikan.moe/?ref=public-apis"&gt;Jikan&lt;/a&gt;. O Jikan Ã© uma API nÃ£o oficial do &lt;a href="https://myanimelist.net"&gt;My Anime List&lt;/a&gt;, ela Ã© bem completinha para o que iremos fazer ğŸ˜†. E para ele existe um &lt;em&gt;wrapper&lt;/em&gt; em js (&lt;a href="https://github.com/zuritor/jikanjs"&gt;jikanjs&lt;/a&gt;) para facilitar ainda mais a nossa vida, para instalar basta rodar.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ yarn add jikanjs
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Com isso jÃ¡ temos acesso a api, vocÃª pode fazer um teste colocando no &lt;code&gt;App.js&lt;/code&gt; o seguinte trecho de cÃ³digo:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;jikanjs&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadSeasonLater&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;anime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mal_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;: &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt; - &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image_url&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt; - &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// in case a error happens&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/h1&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Abra o seu console e vocÃª verÃ¡ a resposta do servidor.&lt;/p&gt;
&lt;p&gt;Vamos colocar esses dados na tela, e para isso vamos criar uma estrutura HTML:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;tmpl&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;anime&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
  &lt;span class="nv"&gt;const&lt;/span&gt; {&lt;span class="nv"&gt;image_url&lt;/span&gt;, &lt;span class="nv"&gt;title&lt;/span&gt;, &lt;span class="nv"&gt;mal_id&lt;/span&gt;, &lt;span class="nv"&gt;type&lt;/span&gt;} &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;anime&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;div&lt;/span&gt; &lt;span class="nv"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;poster-wrapper&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;{&lt;span class="nv"&gt;mal_id&lt;/span&gt;} &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;{&lt;span class="nv"&gt;mal_id&lt;/span&gt;}&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;figure&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;{&lt;span class="nv"&gt;type&lt;/span&gt;}&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nv"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;img&lt;/span&gt; &lt;span class="nv"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;{&lt;span class="nv"&gt;image_url&lt;/span&gt;} &lt;span class="nv"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;{&lt;span class="nv"&gt;title&lt;/span&gt;} &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;{&lt;span class="nv"&gt;title&lt;/span&gt;}&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nv"&gt;figure&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nv"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="ss"&gt;)&lt;/span&gt;

}
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;e depois vamos fazer o request, para isso vamos adicionar o &lt;code&gt;state&lt;/code&gt; e o &lt;code&gt;componentDidMount&lt;/code&gt;:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;constructor&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;props&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
  &lt;span class="nv"&gt;super&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;props&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
  &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
      &lt;span class="nv"&gt;animes&lt;/span&gt;: []
  }
}

&lt;span class="nv"&gt;componentDidMount&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
  &lt;span class="nv"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;animes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; []
  &lt;span class="nv"&gt;jikanjs&lt;/span&gt;
  .&lt;span class="nv"&gt;loadSeasonLater&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
  .&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;response&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class="nv"&gt;response&lt;/span&gt;.&lt;span class="nv"&gt;anime&lt;/span&gt;.&lt;span class="nv"&gt;forEach&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; {
          &lt;span class="nv"&gt;animes&lt;/span&gt;.&lt;span class="nv"&gt;push&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;element&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
      }&lt;span class="ss"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;setState&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;{ &lt;span class="nv"&gt;animes&lt;/span&gt; }&lt;span class="ss"&gt;)&lt;/span&gt;
  }&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;catch&lt;/span&gt;&lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;err&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class="nv"&gt;console&lt;/span&gt;.&lt;span class="nv"&gt;error&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;err&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;; // in case a error happens&lt;/span&gt;
  }&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;E agora vamos adicionar no &lt;code&gt;render&lt;/code&gt; o conteÃºdo.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;render&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
    &lt;span class="nv"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;animes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;state&lt;/span&gt;.&lt;span class="nv"&gt;animes&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;animes&lt;/span&gt;.&lt;span class="nv"&gt;map&lt;/span&gt;&lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;anime&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;anime&lt;/span&gt;.&lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TV&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; ? &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;tmpl&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;anime&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; : &lt;span class="nv"&gt;null&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Pronto, com isso jÃ¡ temos todos os itens sendo exibidos na pÃ¡gina!&lt;/p&gt;
&lt;h3&gt;Vamos passar a primeira maquiagem:&lt;/h3&gt;
&lt;p&gt;A ideia aqui Ã© sÃ³ tornar a nossa visualizaÃ§Ã£o melhor, nÃ£o tem muita regra e ainda nem adicionei um prÃ©-processador.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#0f0f0f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#f1f1f1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;poster-wrapper&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;310&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;poster-wrapper--active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="mh"&gt;#f1f1f1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h3&gt;Test, Jest everywhere...&lt;/h3&gt;
&lt;p&gt;NÃ³s nÃ£o podemos esquecer de fazer os testes da nossa app (&lt;em&gt;ou de qualquer cÃ³digo que faÃ§amos&lt;/em&gt;), para isso vamos instalar o jest:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ yarn add -D jest babel-jest enzyme jest-environment-enzyme jest-enzyme enzyme-adapter-react-16 identity-obj-proxy
$ yarn jest --init
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;na linha 2 a gente cria a configuraÃ§Ã£o inicial do jest automaticamente, Ã© sÃ³ seguir a sequÃªncia &lt;code&gt;jsdom, y, y&lt;/code&gt;, com isso ele cria um arquivo chamado &lt;code&gt;jest.config.js&lt;/code&gt;. Nele faÃ§a a modificaÃ§Ã£o nas linhas 82, 129, 135 e 144:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;moduleNameMapper&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// 82&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;\\.(css|sass)$&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;identity-obj-proxy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="nx"&gt;setupFilesAfterEnv&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;rootDir&amp;gt;/src/setupTests.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="c1"&gt;// 129&lt;/span&gt;
&lt;span class="nx"&gt;testEnvironment&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;enzyme&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// 135&lt;/span&gt;
&lt;span class="nx"&gt;testMatch&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="c1"&gt;// 144&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;**/*.test.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;TambÃ©m precisamos criar o arquivo &lt;code&gt;src/setupTest.js&lt;/code&gt; e dentro dele colocar:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;configure&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;enzyme&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Adapter&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;enzyme-adapter-react-16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;adapter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Adapter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Com isso sÃ³ falta alterar o nosso &lt;code&gt;package.json&lt;/code&gt; para rodar os testes e coverage:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;...&lt;/span&gt;
  &lt;span class="err"&gt;scripts:&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;...&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;jest&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;test:coverage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;jest --coverage&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;TambÃ©m adicionei o ESLint, para ver como ficou, olhe &lt;a href="https://github.com/paulopotter/my-first-smart-tv-app/commit/853e5bf"&gt;esse commit&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;NavegaÃ§Ã£o&lt;/h2&gt;
&lt;p&gt;Para fazer a navegaÃ§Ã£o, eu vou adicionar uma classe para indicar a seleÃ§Ã£o:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;tmpl&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;anime&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
    ...
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nv"&gt;div&lt;/span&gt; &lt;span class="nv"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;{`&lt;span class="nv"&gt;poster&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;wrapper&lt;/span&gt; ${&lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;state&lt;/span&gt;.&lt;span class="nv"&gt;activeItem&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; ? &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;poster-wrapper--active&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;: &lt;span class="nv"&gt;null&lt;/span&gt;}`} &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;{&lt;span class="nv"&gt;mal_id&lt;/span&gt;} &lt;span class="nv"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;{&lt;span class="nv"&gt;mal_id&lt;/span&gt;}&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    ...
}

&lt;span class="nv"&gt;render&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; {
    ...
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;animes&lt;/span&gt;.&lt;span class="nv"&gt;map&lt;/span&gt;&lt;span class="ss"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;anime&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;anime&lt;/span&gt;.&lt;span class="nv"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;TV&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; ? &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;tmpl&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;anime&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; : &lt;span class="nv"&gt;null&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
    ...
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;e agora a gente ouve os eventos do teclado:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;onKeyDown&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
    &lt;span class="nv"&gt;const&lt;/span&gt; { &lt;span class="nv"&gt;activeItem&lt;/span&gt;, &lt;span class="nv"&gt;animes&lt;/span&gt; } &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;state&lt;/span&gt;
    &lt;span class="nv"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;newActiveItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;activeItem&lt;/span&gt;
    &lt;span class="nv"&gt;switch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;keyCode&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
      &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;37&lt;/span&gt;: &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;left&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;activeItem&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
          &lt;span class="nv"&gt;newActiveItem&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        }
        &lt;span class="k"&gt;break&lt;/span&gt;

      &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;39&lt;/span&gt;: &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;right&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;activeItem&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;animes&lt;/span&gt;.&lt;span class="nv"&gt;length&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
          &lt;span class="nv"&gt;newActiveItem&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        }
        &lt;span class="k"&gt;break&lt;/span&gt;

      &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;: &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;down&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;activeItem&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;animes&lt;/span&gt;.&lt;span class="nv"&gt;length&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;activeItem&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;animes&lt;/span&gt;.&lt;span class="nv"&gt;length&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
            &lt;span class="nv"&gt;newActiveItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;animes&lt;/span&gt;.&lt;span class="nv"&gt;length&lt;/span&gt;
          } &lt;span class="k"&gt;else&lt;/span&gt; {
            &lt;span class="nv"&gt;newActiveItem&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
          }
        }
        &lt;span class="k"&gt;break&lt;/span&gt;
      &lt;span class="nv"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;38&lt;/span&gt;: &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;up&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;activeItem&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;animes&lt;/span&gt;.&lt;span class="nv"&gt;length&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;activeItem&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
            &lt;span class="nv"&gt;newActiveItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
          } &lt;span class="k"&gt;else&lt;/span&gt; {
            &lt;span class="nv"&gt;newActiveItem&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
          }
        }
        &lt;span class="k"&gt;break&lt;/span&gt;
      &lt;span class="nv"&gt;default&lt;/span&gt;:
        &lt;span class="k"&gt;break&lt;/span&gt;
    }
    &lt;span class="nv"&gt;this&lt;/span&gt;.&lt;span class="nv"&gt;setState&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;{
      &lt;span class="nv"&gt;activeItem&lt;/span&gt;: &lt;span class="nv"&gt;newActiveItem&lt;/span&gt;
    }&lt;span class="ss"&gt;)&lt;/span&gt;
  }
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;para essa funÃ§Ã£o funcionar a gente ainda precisa adicionar as seguintes linhas:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onKeyDown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onKeyDown&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enableKeyEvent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;componentWillUnmount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disableKeyEvent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;enableKeyEvent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;keydown&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onKeyDown&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;disableKeyEvent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;keydown&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onKeyDown&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h2&gt;That`s it&lt;/h2&gt;
&lt;p&gt;Ã‰ isso, para a nossa primeira parte isso jÃ¡ Ã© o suficiente para comeÃ§ar a brincar ( e porque se eu continuar o post vai demorar 3 horas para ser lido ğŸ¤ª)
Para ver todos os commits desse post, acesse &lt;a href="https://github.com/paulopotter/my-first-smart-tv-app/releases/tag/post-1"&gt;essa tag no github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No prÃ³ximo post, nÃ³s teremos a continuaÃ§Ã£o dos testes, fix de alguns bugs e criaÃ§Ã£o de algum evento para quando selecionar-mos um item.&lt;/p&gt;
&lt;p&gt;Qualquer dÃºvida, critica ou sugestÃ£o utilizem os comentÃ¡rios e atÃ© a prÃ³xima!!&lt;/p&gt;</content><category term="Smart TV"></category><category term="Js"></category><category term="React"></category></entry><entry><title>Como Ã© o desenvolvimento para Smart TVs</title><link href="https://umdevqualquer.com.br/como-e-o-desenvolvimento-para-smart-tvs.html" rel="alternate"></link><published>2019-10-09T00:00:00-03:00</published><updated>2019-10-09T00:00:00-03:00</updated><author><name>Paulo Oliveira</name></author><id>tag:umdevqualquer.com.br,2019-10-09:/como-e-o-desenvolvimento-para-smart-tvs.html</id><summary type="html">&lt;p&gt;Fala galera, blz?&lt;/p&gt;
&lt;p&gt;HÃ¡ aproximadamente a 1 ano, tenho sido integrante de um time de Smart TVs na globo.com, estando a frente do time da app do globosat play e as vezes meto o meu bedelho no desenvolvimento do app do globo esporte para tv.
&lt;/p&gt;</summary><content type="html">&lt;p&gt;Fala galera, blz?&lt;/p&gt;
&lt;p&gt;HÃ¡ aproximadamente a 1 ano, tenho sido integrante de um time de Smart TVs na globo.com, estando a frente do time da app do globosat play e as vezes meto o meu bedelho no desenvolvimento do app do globo esporte para tv.
&lt;/p&gt;
&lt;p&gt;GraÃ§as a isso, eu gostaria de compartilhar um pouco da minha experiÃªncia nessa nova Ã¡rea e com isso mostrar o quÃ£o simples Ã© fazer uma app de Tv. Esse serÃ¡ um post conceito, logo nÃ£o haverÃ¡ linha de cÃ³digo...&lt;/p&gt;
&lt;h2&gt;Anota aÃ­:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Saber javascript.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="meme He-man" src="https://i.pinimg.com/originals/6d/17/9b/6d179b75c54cc2bada2a1688ae3c6a04.jpg"&gt; &lt;br/&gt;&lt;sup&gt;&lt;em&gt;CrÃ©ditos:&lt;/em&gt; na imagem&lt;/sup&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;Entendendo um pouco mais sobre as Smart TVs:&lt;/h2&gt;
&lt;p&gt;Hoje existem vÃ¡rias marcas de Smart TVs no mercado, as mais conhecidas sÃ£o da &lt;em&gt;Samsung&lt;/em&gt; e &lt;em&gt;LG&lt;/em&gt;, mas ainda temos &lt;em&gt;Sony, Panasonic, TCL, Xiaomi, Motorola...&lt;/em&gt;
Dependendo da fabricante e do sistema operacional, vocÃª encontrarÃ¡ as seguintes stacks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Android TV&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Kotlin/Java&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Apple TV&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Swift&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Samsung TV&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Tizen&lt;/em&gt;:&lt;ul&gt;
&lt;li&gt;Web hosted (HTML/CSS/JS)&lt;/li&gt;
&lt;li&gt;Xamarin&lt;/li&gt;
&lt;li&gt;.NET&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Orsay &lt;sup&gt;(Descontinuadas)&lt;/sup&gt;&lt;/em&gt;:&lt;ul&gt;
&lt;li&gt;Pelo amor de Zico, nÃ£o programe para essa tv!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LG TV&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;&lt;em&gt;WebOs&lt;/em&gt;:&lt;ul&gt;
&lt;li&gt;Web hosted (HTML/CSS/JS)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;NetCast &lt;sup&gt;(Descontinuadas)&lt;/sup&gt;&lt;/em&gt;:&lt;ul&gt;
&lt;li&gt;Assim como a Orsay, evite esse S.O, assim como o cascÃ£o evita a Ã¡gua.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Nota: Ainda hoje a Orsay tem a maior fatia do mercado brasileiro.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;
Como desenvolvo mais para a &lt;strong&gt;LG&lt;/strong&gt; e &lt;strong&gt;Samsung&lt;/strong&gt;, irei me aprofundar mais sobre elas, caso tenham duvida sobre os outros S.Os / Fabricantes, deixem nos comentÃ¡rios.&lt;/p&gt;
&lt;p&gt;Assim como mostrei ali em cima, todas elas tÃªm o seu desenvolvimento nativo (com uma linguagem de programaÃ§Ã£o especifica para aquele S.O), mas tambÃ©m existem algumas que suportam Apps Web hosted, como Samsung e LG (que por sinal, elas sÃ£o as que possuem o maior market share no mundo!)&lt;/p&gt;
&lt;p&gt;Assim como brinquei, Ã© basicamente isso mesmo que vocÃª deverÃ¡ saber: Javascript! Principalmente se vocÃª estiver programando para o mercado brasileiro, onde a maioria das Smart TVs dos brasileiros possui suporte.&lt;/p&gt;
&lt;h2&gt;As dificuldades:&lt;/h2&gt;
&lt;p&gt;Mas nÃ£o Ã© porque vocÃª sabe javascript que vai ser tudo lindo, ao contrÃ¡rio de boa parte do que fazemos hoje para o desenvolvimento web, Ã© necessÃ¡ria muita preocupaÃ§Ã£o com performance e compatibilidade de cÃ³digo. Tanto no JS quanto no CSS. Por exemplo, o meu amado &lt;em&gt;flexbox&lt;/em&gt; nÃ£o funciona em algumas tvs. EntÃ£o vocÃª precisa testar bem nas tvs que vocÃª darÃ¡ suporte e/ou qual serÃ¡ a sua "rÃ©gua de corte" nas tvs. Somado a isso os hardwares das tvs sÃ£o "fracos", alguns atÃ© sendo pior que um feature phone. Nota: &lt;em&gt;Seu tamagotchi pode ser melhor que o hardware da sua tv.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Quando se desenvolve apps web hosted, a tv abre um "browser" para o usuÃ¡rio (sem a barra de endereÃ§o, assim como uma app PWA), porÃ©m esses browsers das tvs sÃ£o antigos e dificilmente eles receberam atualizaÃ§Ãµes.&lt;/p&gt;
&lt;p&gt;Outro problema recorrente, mesmo que vocÃª compre uma tv esse ano, nÃ£o necessariamente ela Ã© nova, vocÃª pode acabar comprando uma tv com 1, 2 atÃ© 3 anos de fabricaÃ§Ã£o. Isso acontece porque as grandes redes de varejistas fazem um estoque de tvs e ao contrÃ¡rio dos celulares, nÃ³s nÃ£o costumamos trocar de tv todos os anos, entÃ£o o estoque "encalha" e dai que surgem aquelas promoÃ§Ãµes de &lt;em&gt;"Super Smart TV com &lt;strike&gt;netflix&lt;/strike&gt; Globoplay e acesso a internet por apenas 12x R$120 no cartÃ£o..."&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Boa parte dos brasileiros nÃ£o pesquisam para comprar suas tvs, apenas pesquisam o preÃ§o e se acessa a internet. Mas mesmo que pesquisem, existe uma certa dificuldade de encontrar o ano da sua TV.&lt;/p&gt;
&lt;p&gt;TambÃ©m nÃ£o poderia deixar de falar da dificuldade de encontrar documentaÃ§Ã£o das tvs e o que suporta (ou nÃ£o). Aos poucos isso estÃ¡ mudando, mas ainda assim Ã© um pouco complicado encontrar certas dÃºvidas. Nem no &lt;a href="http://stackoverflow.com"&gt;Stackoverflow&lt;/a&gt; vocÃª encontra ğŸ˜±. PorÃ©m eu encontrei &lt;a href="https://developer.samsung.com/tv/develop/specifications/general-specifications"&gt;esse link&lt;/a&gt; com as especificaÃ§Ãµes gerais das tvs Samsung, o que jÃ¡ ajuda um pouco.&lt;/p&gt;
&lt;h2&gt;Como extrair informaÃ§Ãµes da sua TV:&lt;/h2&gt;
&lt;p&gt;Os cÃ³digos das tvs dizem muito sobre elas, basicamente descreve ela por completo.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Samsung:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Usando o modelo &lt;strong&gt;UE55F8000AFXZ&lt;/strong&gt; como exemplo, podemos ver o seguinte:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;U&lt;/strong&gt; = LED&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;E&lt;/strong&gt; = Produzido na Europa&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;55&lt;/strong&gt; = Tamanho da tela&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F&lt;/strong&gt; = Fabricado em 2013 (Ano de fabricaÃ§Ã£o)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;8000&lt;/strong&gt; = Numero de sÃ©rie. Isso serÃ¡ diferente dependendo dos recursos de cada modelo. Ã‰ possÃ­vel descobrir as especificaÃ§Ãµes dos modelos, digitando o cÃ³digo do modelo &lt;a href="https://www.samsung.com/br/tvs/"&gt;aqui&lt;/a&gt; (use a busca)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A&lt;/strong&gt; = Features ou design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FXZ&lt;/strong&gt; = InformaÃ§Ãµes tÃ©cnicas de produÃ§Ã£o&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Se vocÃª possui UE55F8000&lt;strong&gt;B&lt;/strong&gt;FXZ no lugar da UE55F8000&lt;strong&gt;A&lt;/strong&gt;FXZ usado no exemplo, vocÃª verÃ¡ que a diferenÃ§a entre eles sÃ£o apenas de design como a cor, por exemplo, mas o resto das especificaÃ§Ãµes serÃ£o as mesmas.&lt;/p&gt;
&lt;p&gt;Para ver a traduÃ§Ã£o de cada letra (como, por exemplo, saber qual letra representa qual ano), acesse &lt;a href="https://www.samsung.com/uk/support/tv-audio-video/what-do-samsung-tv-model-numbers-actually-mean-why-are-they-so-long/"&gt;esse link&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LG:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Encontrei essa imagem que facilita a explicaÃ§Ã£o no caso da LG:
&lt;center&gt; &lt;img alt="tab-tv image" src="./images/LG-TV-model-identification-2018-2019-new.jpg"&gt; &lt;br/&gt;&lt;br/&gt;&lt;sup&gt;&lt;em&gt;CrÃ©ditos:&lt;/em&gt; na imagem&lt;/sup&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Para ver a traduÃ§Ã£o de cada letra (como, por exemplo, saber qual letra representa qual ano), acesse &lt;a href="http://en.tab-tv.com/?page_id=7111"&gt;esse link&lt;/a&gt; (nÃ£o oficial).&lt;/p&gt;
&lt;h2&gt;That`s all folks:&lt;/h2&gt;
&lt;p&gt;Com isso em mente, vocÃª jÃ¡ pode comeÃ§ar a se preparar para desenvolver sua tv app ou saber escolher melhor a sua prÃ³xima tv.&lt;/p&gt;
&lt;p&gt;Dentro de alguns dias eu irei fazer uma sÃ©rie de posts mais tÃ©cnicos, mostrando o desenvolvimento de uma tela simples para testar na sua TV em casa.&lt;/p&gt;</content><category term="Smart TV"></category><category term="Js"></category><category term="React"></category></entry></feed>